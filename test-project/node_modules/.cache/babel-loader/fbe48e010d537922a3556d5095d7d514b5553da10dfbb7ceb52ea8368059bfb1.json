{"ast":null,"code":"var _jsxFileName = \"D:\\\\Work\\\\playing_backyard\\\\interviews\\\\test-project\\\\src\\\\contexts\\\\user-context.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserContext = /*#__PURE__*/createContext(undefined);\nconst UserConextDispatcher = /*#__PURE__*/createContext(undefined);\nconst UserProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [user, setUser] = useState({\n    name: 'John Doe',\n    email: 'john@gmail.com',\n    age: 25\n  });\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: user,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n};\n_s(UserProvider, \"sdWliP5bthLYt/vvo81zSGgSQpM=\");\n_c = UserProvider;\nexport { UserContext, UserConextDispatcher, UserProvider };\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["createContext","useState","jsxDEV","_jsxDEV","UserContext","undefined","UserConextDispatcher","UserProvider","_ref","_s","children","user","setUser","name","email","age","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Work/playing_backyard/interviews/test-project/src/contexts/user-context.js"],"sourcesContent":["import { createContext, useState } from \"react\";\r\n\r\nconst UserContext = createContext(undefined);\r\nconst UserConextDispatcher = createContext(undefined);\r\n\r\nconst UserProvider = ({ children }) => {\r\n    const [user, setUser] = useState({\r\n        name: 'John Doe',\r\n        email: 'john@gmail.com',\r\n        age: 25\r\n    });\r\n\r\n    return (\r\n        <UserContext.Provider value={user}>\r\n      {/*       <UserConextDispatcher.Provider value={setUser}> */}\r\n                {children}\r\n           {/*  </UserConextDispatcher.Provider> */}\r\n        </UserContext.Provider>\r\n    )\r\n}\r\n\r\nexport { UserContext, UserConextDispatcher, UserProvider };\r\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,WAAW,gBAAGJ,aAAa,CAACK,SAAS,CAAC;AAC5C,MAAMC,oBAAoB,gBAAGN,aAAa,CAACK,SAAS,CAAC;AAErD,MAAME,YAAY,GAAGC,IAAA,IAAkB;EAAAC,EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC,GAAAF,IAAA;EAC9B,MAAM,CAACG,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC;IAC7BY,IAAI,EAAE,UAAU;IAChBC,KAAK,EAAE,gBAAgB;IACvBC,GAAG,EAAE;EACT,CAAC,CAAC;EAEF,oBACIZ,OAAA,CAACC,WAAW,CAACY,QAAQ;IAACC,KAAK,EAAEN,IAAK;IAAAD,QAAA,EAEzBA;EAAQ;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEK,CAAC;AAE/B,CAAC;AAAAZ,EAAA,CAdKF,YAAY;AAAAe,EAAA,GAAZf,YAAY;AAgBlB,SAASH,WAAW,EAAEE,oBAAoB,EAAEC,YAAY;AAAG,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}